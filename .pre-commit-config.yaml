---

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Filesystem
      - id: check-case-conflict
      - id: check-symlinks
      # Whitespace
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: mixed-line-ending
      # Syntax
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: pretty-format-json
        args:
          - --autofix
          - --indent=2
          - --no-sort-keys
      - id: check-toml
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args:
          - --strict
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-mock-methods
      - id: rst-backticks
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.1
    hooks:
      - id: ruff-check
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.8.19
    hooks:
      - id: uv-lock
        files: anki-extract-kanji/pyproject.toml
        args: [--project, anki-extract-kanji]
      - id: uv-lock
        files: wanikani-burnt-kanji-to-anki/pyproject.toml
        args: [--project, wanikani-burnt-kanji-to-anki]
  - repo: https://github.com/PyCQA/doc8
    rev: v2.0.0
    hooks:
      - id: doc8
        args:
          - --quiet
  - repo: https://github.com/renovatebot/pre-commit-hooks
    rev: 41.131.8
    hooks:
      - id: renovate-config-validator
  - repo: https://github.com/rtts/djhtml
    rev: 3.0.10
    hooks:
      - id: djhtml
        args:
          - --tabwidth=2
        types: [html]
  - repo: local
    hooks:
      - id: logging.getLogger
        name: Use structlog.get_logger() instead of logging.getLogger()
        language: pygrep
        entry: logging.getLogger\(
        types: [python]
      - id: missing-__init__.py
        name: missing __init__.py
        language: system
        types: [python]
        entry: >
          sh -c '
            MISSING=false
            for f in $@; do
              f="$(dirname ${f})"
              if [ ! -f "${f}/__init__.py" ]; then
                MISSING=true
                echo "ERROR: No __init__.py found for ${f}/";
              fi
            done
            if [ $MISSING == true ]; then
              exit 1
            fi
          '
      - id: cargo-check
        name: cargo check
        language: system
        types: [rust]
        require_serial: true
        entry: >
          bash -c '
            dirs=()
            for f in $@; do
              dirs+=($(dirname $(cd $(dirname "${f}") && cargo locate-project --message-format=plain)))
            done

            for d in $(printf "%s\n" "${dirs[@]}" | sort -u); do
              (cd "${d}" && cargo +stable check)
            done
          '
      - id: rustfmt
        name: rustfmt
        language: system
        types: [rust]
        require_serial: true
        entry: >
          bash -c '
            dirs=()
            for f in $@; do
              dirs+=($(dirname $(cd $(dirname "${f}") && cargo locate-project --message-format=plain)))
            done

            for d in $(printf "%s\n" "${dirs[@]}" | sort -u); do
              (cd "${d}" && cargo +stable fmt)
            done
          '
      - id: clippy
        name: clippy
        language: system
        types: [rust]
        require_serial: true
        entry: >
          bash -c '
            dirs=()
            for f in $@; do
              dirs+=($(dirname $(cd $(dirname "${f}") && cargo locate-project --message-format=plain)))
            done

            for d in $(printf "%s\n" "${dirs[@]}" | sort -u); do
              (cd "${d}" && cargo +stable clippy -- -D warnings)
            done
          '
